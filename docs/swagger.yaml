definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.Order:
    properties:
      createdAt:
        type: string
      createdBy:
        type: integer
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      orderDetail:
        items:
          $ref: '#/definitions/model.OrderDetail'
        type: array
      totalAmount:
        type: integer
      totalPrice:
        type: number
      updatedAt:
        type: string
    type: object
  model.OrderDetail:
    properties:
      amount:
        type: integer
      createdAt:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      orderID:
        type: integer
      price:
        type: number
      productID:
        type: integer
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      order:
        items:
          $ref: '#/definitions/model.Order'
        type: array
      password:
        type: string
      roleInfoID:
        type: integer
      updatedAt:
        type: string
      username:
        type: string
    type: object
  request.LoginRequest:
    properties:
      password:
        example: "1234"
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  request.OrderItem:
    properties:
      amount:
        example: 10
        type: integer
      product_id:
        example: 1
        type: integer
    required:
    - amount
    - product_id
    type: object
  request.OrderRequest:
    properties:
      orders:
        items:
          $ref: '#/definitions/request.OrderItem'
        type: array
    required:
    - orders
    type: object
  request.PermissionInfoRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  request.Product:
    properties:
      amount:
        example: 10
        type: integer
      description:
        example: apple
        type: string
      name:
        example: apple
        type: string
      price:
        example: 200
        type: number
      product_category_id:
        example: 1
        type: integer
      sale_close_date:
        example: "2021-12-26T00:00:00Z"
        type: string
      sale_open_date:
        example: "2021-12-26T00:00:00Z"
        type: string
    required:
    - amount
    - name
    - price
    - product_category_id
    - sale_close_date
    - sale_open_date
    type: object
  request.ProductCategoryRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  request.RoleInfoRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  request.TokenReqBody:
    properties:
      refresh_token:
        type: string
    type: object
  request.UpdateProduct:
    properties:
      amount:
        example: 10
        type: integer
      description:
        example: apple
        type: string
      name:
        example: apple
        type: string
      price:
        example: 200
        type: number
      product_category_id:
        example: 1
        type: integer
      sale_close_date:
        example: "2021-12-26T00:00:00Z"
        type: string
      sale_open_date:
        example: "2021-12-26T00:00:00Z"
        type: string
    type: object
  request.UpdateProductCategory:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  request.UserRequest:
    properties:
      avatar:
        example: admin
        type: string
      email:
        example: admin@gmail.com
        type: string
      fullname:
        example: admin test
        type: string
      password:
        example: "1234"
        type: string
      roleInfoId:
        example: 1
        type: integer
      username:
        example: admin
        type: string
    required:
    - email
    - fullname
    - password
    - username
    type: object
  response.CreateDataResponse:
    properties:
      message:
        example: create success
        type: string
      response_key:
        type: string
      response_message:
        type: string
    type: object
  response.DeleteDataResponse:
    properties:
      message:
        example: delete success
        type: string
      response_key:
        type: string
      response_message:
        type: string
    type: object
  response.Order:
    properties:
      id:
        type: integer
      total_amount:
        type: integer
      total_price:
        type: number
    required:
    - total_amount
    - total_price
    type: object
  response.OrderPagination:
    properties:
      data:
        items:
          $ref: '#/definitions/response.Order'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      response_key:
        type: string
      response_message:
        type: string
      totalPage:
        type: integer
    type: object
  response.PermissionInfo:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  response.PermissionInfoPagination:
    properties:
      data:
        items:
          $ref: '#/definitions/response.PermissionInfo'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      response_key:
        type: string
      response_message:
        type: string
      totalPage:
        type: integer
    type: object
  response.Product:
    properties:
      description:
        example: apple
        type: string
      id:
        type: integer
      name:
        example: apple
        type: string
    required:
    - name
    type: object
  response.ProductCategory:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  response.ProductCategoryPagination:
    properties:
      data:
        items:
          $ref: '#/definitions/response.ProductCategory'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      response_key:
        type: string
      response_message:
        type: string
      totalPage:
        type: integer
    type: object
  response.ProductPagination:
    properties:
      data:
        items:
          $ref: '#/definitions/response.Product'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      response_key:
        type: string
      response_message:
        type: string
      totalPage:
        type: integer
    type: object
  response.RoleInfo:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  response.RoleInfoPagination:
    properties:
      data:
        items:
          $ref: '#/definitions/response.RoleInfo'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      response_key:
        type: string
      response_message:
        type: string
      totalPage:
        type: integer
    type: object
  response.UpdateDataResponse:
    properties:
      message:
        example: update success
        type: string
      response_key:
        type: string
      response_message:
        type: string
    type: object
  response.User:
    properties:
      avatar:
        type: string
      fullName:
        description: Password string `json:"password"`
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  response.UserPagination:
    properties:
      data:
        items:
          $ref: '#/definitions/response.User'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      response_key:
        type: string
      response_message:
        type: string
      totalPage:
        type: integer
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      description: Login
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Login
      tags:
      - Auth
  /auth/refresh/token:
    post:
      description: RefreshToken
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.TokenReqBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: RefreshToken
      tags:
      - Auth
  /auth/register:
    post:
      description: Register
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Register
      tags:
      - Auth
  /orders:
    get:
      description: Get Order List
      parameters:
      - description: int valid
        in: query
        name: page
        type: integer
      - description: int valid
        in: query
        name: pageSize
        type: integer
      - description: string valid
        in: query
        name: sortField
        type: string
      - description: string valid
        in: query
        name: sortValue
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.OrderPagination'
      security:
      - Bearer: []
      summary: Get Order List
      tags:
      - Order
    post:
      description: Create Order
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.OrderRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
      security:
      - Bearer: []
      summary: Create Order
      tags:
      - Order
  /permission_infos:
    get:
      description: Get PermissionInfo List
      parameters:
      - description: int valid
        in: query
        name: page
        type: integer
      - description: int valid
        in: query
        name: pageSize
        type: integer
      - description: string valid
        in: query
        name: sortField
        type: string
      - description: string valid
        in: query
        name: sortValue
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PermissionInfoPagination'
      security:
      - Bearer: []
      summary: Get PermissionInfo List
      tags:
      - PermissionInfo
    post:
      description: Create PermissionInfo
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.PermissionInfoRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateDataResponse'
      security:
      - Bearer: []
      summary: Create PermissionInfo
      tags:
      - PermissionInfo
  /permission_infos/{permissionInfoID}:
    delete:
      description: Delete PermissionInfo By Id
      parameters:
      - description: PermissionInfo ID
        in: path
        name: permissionInfoID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteDataResponse'
      security:
      - Bearer: []
      summary: Delete PermissionInfo By Id
      tags:
      - PermissionInfo
    get:
      description: Get PermissionInfo By Id
      parameters:
      - description: PermissionInfo ID
        in: path
        name: permissionInfoID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PermissionInfo'
      security:
      - Bearer: []
      summary: Get PermissionInfo By Id
      tags:
      - PermissionInfo
    put:
      description: Update PermissionInfo By Id
      parameters:
      - description: PermissionInfo ID
        in: path
        name: permissionInfoID
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProductCategory'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateDataResponse'
      security:
      - Bearer: []
      summary: Update PermissionInfo By Id
      tags:
      - PermissionInfo
  /products:
    get:
      description: Get Product List
      parameters:
      - description: int valid
        in: query
        name: page
        type: integer
      - description: int valid
        in: query
        name: pageSize
        type: integer
      - description: string valid
        in: query
        name: sortField
        type: string
      - description: string valid
        in: query
        name: sortValue
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ProductPagination'
      security:
      - Bearer: []
      summary: Get Product List
      tags:
      - Product
    post:
      description: Create Product
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.Product'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateDataResponse'
      security:
      - Bearer: []
      summary: Create Product
      tags:
      - Product
  /products/{productID}:
    delete:
      description: Delete Product By Id
      parameters:
      - description: Product ID
        in: path
        name: productID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteDataResponse'
      security:
      - Bearer: []
      summary: Delete Product By Id
      tags:
      - Product
    get:
      description: Get Product By Id
      parameters:
      - description: Product ID
        in: path
        name: productID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Product'
      security:
      - Bearer: []
      summary: Get Product By Id
      tags:
      - Product
    put:
      description: Update Product By Id
      parameters:
      - description: Product ID
        in: path
        name: productID
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProduct'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateDataResponse'
      security:
      - Bearer: []
      summary: Update Product By Id
      tags:
      - Product
  /products/categories:
    get:
      description: Get ProductCategory List
      parameters:
      - description: int valid
        in: query
        name: page
        type: integer
      - description: int valid
        in: query
        name: pageSize
        type: integer
      - description: string valid
        in: query
        name: sortField
        type: string
      - description: string valid
        in: query
        name: sortValue
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ProductCategoryPagination'
      security:
      - Bearer: []
      summary: Get ProductCategory List
      tags:
      - ProductCategory
    post:
      description: Create ProductCategory
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ProductCategoryRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateDataResponse'
      security:
      - Bearer: []
      summary: Create ProductCategory
      tags:
      - ProductCategory
  /products/categories/{productCategoryID}:
    delete:
      description: Delete ProductCategory By Id
      parameters:
      - description: User ID
        in: path
        name: productCategoryID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteDataResponse'
      security:
      - Bearer: []
      summary: Delete ProductCategory By Id
      tags:
      - ProductCategory
    get:
      description: Get ProductCategory By Id
      parameters:
      - description: User ID
        in: path
        name: productCategoryID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ProductCategory'
      security:
      - Bearer: []
      summary: Get ProductCategory By Id
      tags:
      - ProductCategory
    put:
      description: Update ProductCategory By Id
      parameters:
      - description: User ID
        in: path
        name: productCategoryID
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProductCategory'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateDataResponse'
      security:
      - Bearer: []
      summary: Update ProductCategory By Id
      tags:
      - ProductCategory
  /role_infos:
    get:
      description: Get RoleInfo List
      parameters:
      - description: int valid
        in: query
        name: page
        type: integer
      - description: int valid
        in: query
        name: pageSize
        type: integer
      - description: string valid
        in: query
        name: sortField
        type: string
      - description: string valid
        in: query
        name: sortValue
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RoleInfoPagination'
      security:
      - Bearer: []
      summary: Get RoleInfo List
      tags:
      - RoleInfo
    post:
      description: Create RoleInfo
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RoleInfoRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateDataResponse'
      security:
      - Bearer: []
      summary: Create RoleInfo
      tags:
      - RoleInfo
  /role_infos/{roleInfoID}:
    delete:
      description: Delete RoleInfo By Id
      parameters:
      - description: RoleInfo ID
        in: path
        name: roleInfoID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteDataResponse'
      security:
      - Bearer: []
      summary: Delete RoleInfo By Id
      tags:
      - RoleInfo
    get:
      description: Get RoleInfo By Id
      parameters:
      - description: RoleInfo ID
        in: path
        name: roleInfoID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RoleInfo'
      security:
      - Bearer: []
      summary: Get RoleInfo By Id
      tags:
      - RoleInfo
    put:
      description: Update RoleInfo By Id
      parameters:
      - description: RoleInfo ID
        in: path
        name: roleInfoID
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProductCategory'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateDataResponse'
      security:
      - Bearer: []
      summary: Update RoleInfo By Id
      tags:
      - RoleInfo
  /users:
    get:
      description: Get User List
      parameters:
      - description: int valid
        in: query
        name: page
        type: integer
      - description: int valid
        in: query
        name: pageSize
        type: integer
      - description: string valid
        in: query
        name: sortField
        type: string
      - description: string valid
        in: query
        name: sortValue
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserPagination'
      security:
      - Bearer: []
      summary: Get User List
      tags:
      - User
    post:
      description: Create User
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateDataResponse'
      security:
      - Bearer: []
      summary: Create User
      tags:
      - User
  /users/{userID}:
    delete:
      description: Delete user By Id
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteDataResponse'
      security:
      - Bearer: []
      summary: Delete User By Id
      tags:
      - User
    get:
      description: Get user By Id
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.User'
      security:
      - Bearer: []
      summary: Get User By Id
      tags:
      - User
    put:
      description: Update user By Id
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateDataResponse'
      security:
      - Bearer: []
      summary: Update User By Id
      tags:
      - User
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
